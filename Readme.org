#+TITLE: dff -- duplicate file finder.

[[https://travis-ci.org/sureshsundriyal/dff.svg?branch=master]]

=dff= is a tool for locating duplicate files in a directory. The tool is
modelled after [[http://duff.dreda.org/][Duff]] without any advanced options.

* Building

#+BEGIN_EXAMPLE
cargo build --release
#+END_EXAMPLE

* Installing

#+BEGIN_EXAMPLE
cargo install
#+END_EXAMPLE

* Usage

In any mode of operation:

  + Symlinks are ignored
  + Zero-size files are ignored
  + The specified files are searched recursively

** Normal Mode

#+BEGIN_EXAMPLE
dff <dir1> [dir2 [dir3...]]
#+END_EXAMPLE

In normal mode of operation; =dff= searches through the specified directories
searching for duplicates using the following algorithm:

  + Only compare files if they are of equal sizes.
  + Compare the hashes of the beginning 1024 bytes to check whether
    they are equal.

The two checks above quickly pin-point files which might be same.

** Thorough Mode

#+BEGIN_EXAMPLE
dff -t <dir1> [dir2 [dir3...]]
#+END_EXAMPLE

In =thorough= mode, instead of comparing the hash of first 1024 bytes; hash of
the complete file contents are compared. This greatly reduces the probability
of false positives.

** Exhaustive Mode

#+BEGIN_EXAMPLE
dff -e <dir1> [dir2 [dir3...]]
#+END_EXAMPLE

In =exhaustive= mode, the complete file contents are compared and should not
have any false positives.

** JSON output

#+BEGIN_EXAMPLE
dff -j [-t|-e] <dir1> [dir2 [dir3...]]
#+END_EXAMPLE

In order to produce JSON output, use the =-j= flag. This is useful for
programatically parsing the data.

* ToDo

  + [ ] Try to eliminate/identify hard-links amongst the duplicates.
